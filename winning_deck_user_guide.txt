usage: winning_deck.py [-h] [--mode MODE] [--max_moves MAX_MOVES]
                       [--num_decks NUM_DECKS] [--deck DECK] [--verbose]
                       [--factory_deck_columns]

optional arguments:
  -h, --help            show this help message and exit
  --mode MODE           options are 'single' or 'bulk' (default 'bulk')
  --max_moves MAX_MOVES
                        max number of moves to play (default 220)
  --num_decks NUM_DECKS
                        number of decks to create (default 1000)
  --deck DECK           which single deck to run (default 0)
  --verbose             increase output verbosity
  --factory_deck_columns
                        flip columns->values in output



USE CASE #1: output a .csv file for use in analysis.

    * example 1: python winning_deck.py [by default runs with mode=bulk, num_decks=1000, max_moves=220]
    * example 2: python winning_deck.py --mode bulk --num_decks 10000 --factory_deck_columns [bulk output with 10K decks and columns/values swapped]


USE CASE #2: run a single deck with given # moves for QA/development (outputs detailed moves to winning_deck_moves.log)

    * example 1: python winning_deck.py --mode single --deck 6 --max_moves 25 [run specific deck# 6 for 25 moves]
    * example 2: python winning_deck.py --mode single --deck 6 --max_moves 26 [add one additional move to diagnose move choice given the prior summary print out]

    * note: use a reasonable number for max_moves to prevent spinning infinitely if your logic change results in repeated/cyclical moves.
